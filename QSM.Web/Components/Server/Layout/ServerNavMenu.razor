@using Microsoft.EntityFrameworkCore
@using QSM.Web.Data
@implements IDisposable

@inject NavigationManager NavigationManager
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">QSM Web Console</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item d-flex align-items-center px-3">
            <NavLink class="nav-link nav-link-btn px-3" href="" Match="NavLinkMatch.All">
                <span class="bi bi-arrow-left" aria-label="Back"></span>
            </NavLink>
            <b class="fs-5">@_server.Name</b>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"/Server/{Id}/")" Match="NavLinkMatch.All">
                <span class="bi bi-text-paragraph me-3" aria-hidden="true"></span> Summary
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"/Server/{Id}/Console")">
                <span class="bi bi-terminal me-3" aria-hidden="true"></span> Console
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"/Server/{Id}/Settings")">
                <span class="bi bi-gear me-3" aria-hidden="true"></span> Settings
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"/Server/{Id}/Mods")">
                <span class="bi bi-plugin me-3" aria-hidden="true"></span> Mods/Plugins
            </NavLink>
        </div>
    </nav>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private ServerInstance _server = new();
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        
        using var ctx = DbFactory.CreateDbContext();

        var server = ctx.Servers.Find(Id);

        if (server == null)
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        _server = server;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}
